# .github/workflows/deploy.yml
name: CI / CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  # If you later switch to GitHub OIDC for AWS, ensure id-token permission:
  # id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:    us-east-1

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Python and cache pip
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install black flake8 pytest pytest-cov moto fastapi[all] boto3

      # 3Ô∏è‚É£ Lint: Black & Flake8
      - name: Black check
        run: black --check .

      - name: Flake8 lint
        run: flake8 .

      # 4Ô∏è‚É£ Run tests with coverage
      - name: Run pytest with coverage
        run: pytest --cov=.

      # 6Ô∏è‚É£ Setup Terraform plugin cache
      - name: Cache Terraform plugins
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('terraform/**/*.tf*') }}

      - name: Setup Terraform CLI plugin cache directory
        run: |
          mkdir -p ~/.terraform.d
          cat <<EOF > ~/.terraform.d/cli.hcl
          plugin_cache_dir = "$HOME/.terraform.d/plugin-cache"
          EOF

      # 7Ô∏è‚É£ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      # 8Ô∏è‚É£ Terraform Init (with backend)
      - name: Terraform Init
        run: terraform -chdir=terraform init -reconfigure

      # 9Ô∏è‚É£ Terraform Fmt Check and Validate
      - name: Terraform Fmt Check
        run: terraform -chdir=terraform fmt -check

      - name: Terraform Validate
        run: terraform -chdir=terraform validate

      # üîü TFLint (Terraform lint) ‚Äî ensure you have terraform/.tflint.hcl configured

      # üîü Terraform Plan
      - name: Terraform Plan
        id: tfplan
        run: terraform -chdir=terraform plan -out=tfplan.binary

      - name: Comment Terraform Plan on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: tfplan.binary

      # 1Ô∏è‚É£1Ô∏è‚É£ Terraform Apply only on push to main
      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform -chdir=terraform apply -auto-approve tfplan.binary
